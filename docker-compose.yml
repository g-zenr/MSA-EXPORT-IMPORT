services:
  # Production service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: msa-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - msa-network
    volumes:
      - ./logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
          cpus: "0.25"

  # Development service with hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: msa-app-dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    restart: unless-stopped
    volumes:
      - ./src:/app/src
      - ./benchmarks:/app/benchmarks
      - ./logs:/app/logs
      - /app/node_modules
    command: ["npm", "run", "dev"]
    networks:
      - msa-network
    profiles:
      - dev

  # Benchmark service
  benchmark:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: msa-benchmark
    environment:
      - NODE_ENV=production
    volumes:
      - ./logs:/app/logs
    command: ["npm", "run", "benchmark"]
    networks:
      - msa-network
    profiles:
      - benchmark

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: msa-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - msa-network
    profiles:
      - production

networks:
  msa-network:
    driver: bridge

volumes:
  logs:
    driver: local
